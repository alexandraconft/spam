{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Spam","body":"URL spam testing library \r\n========================\r\n\r\n![travis build](https://secure.travis-ci.org/fmarani/spam.png)\r\n\r\nA library to verify whether an url has been classified as spam\r\n\r\nSupports:\r\n\r\nSpamHaus zen \r\n* SBL (e-mail spam)\r\n* XBL (infected PCs)\r\n* PBL (unsolicited smtp traffic)\r\n\r\nSurbl multi\r\n* Spamcop\r\n* sa-blacklist\r\n* Outblaze\r\n* Abusebutler\r\n* Phishtank\r\n* Zeus tracker\r\n* jwSpamSpy\r\n* Prolocation\r\n\r\nFor any further information, you can watch the tutorial [here](http://www.youtube.com/watch?v=anwy2MPT5RE)\r\n\r\nContinuous integration: [Travis profile for fmarani/spam](http://travis-ci.org/fmarani/spam)\r\n\r\nInstall\r\n-------\r\n\r\nFrom PyPI (stable):\r\n\r\n    pip install spam-blocklists\r\n\r\nFrom Github (unstable):\r\n\r\n    pip install git+git://github.com/fmarani/spam.git#egg=spam-blocklists\r\n\r\nUse\r\n---\r\n\r\nSpamhaus:\r\n\r\n    >>> from spam.spamhaus import SpamHausChecker\r\n    >>> checker = SpamHausChecker()\r\n\r\n    # google.com is a good domain\r\n    >>> checker.is_spam(\"http://www.google.com/search?q=food\")\r\n    False\r\n\r\n    # this domain does not exist\r\n    >>> checker.is_spam(\"http://buyv1agra.com/\")\r\n    Traceback (most recent call last):\r\n        ...\r\n    DomainInexistentException\r\n\r\n    # this is a scam\r\n    >>> checker.is_spam(\"http://mihouyuan.com/login.htm\")\r\n    True\r\n\r\nSurbl:\r\n\r\n    >>> from spam.surbl import SurblChecker\r\n    >>> checker = SurblChecker()\r\n\r\n    # google.com test\r\n    >>> checker.is_spam(\"http://www.google.com/search?q=food\")\r\n    False\r\n\r\n    # spamhaus says it is spam, surbl does not\r\n    >>> checker.is_spam(\"http://mihouyuan.com/login.htm\")\r\n    False\r\n\r\n    # test endpoint for surbl\r\n    >>> checker.is_spam(\"http://surbl-org-permanent-test-point.com/\")\r\n    True\r\n\r\nContribute\r\n----------\r\n\r\nClone and install testing dependencies:\r\n\r\n    pip install -r requirements.txt\r\n\r\nEnsure tests pass:\r\n\r\n    ./runtests.sh\r\n\r\n\r\nUsage as a web service\r\n----------------------\r\n\r\nIf you are interested in using this library from any other language (PHP, Java, Scala, etc...) you can use the REST api available to everyone on Mashape. Check it out!\r\n\r\n[Mashape Spamhaus-Surbl Rest API](http://www.mashape.com/flagz/spamhaus-and-surbl-rest-interface)\r\n","tagline":"Python library to check urls on spamhaus or surbl","google":""}